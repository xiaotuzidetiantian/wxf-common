package com.wuxufang.util;

import java.io.UnsupportedEncodingException;
import java.util.Random;

public class StringUtil {

	// 方法1：判断源字符串是否有值，空引号(空白字符串)也算没值 (5分)
	public static boolean hasLength(String src){
		return null!=src && src.length() > 0;
	}
	// 方法2：判断源字符串是否有值，空引号(空白字符串)和空格也算没值 (5分)
	public static boolean hasText(String src){
		return null!=src && src.trim().length() > 0;
	}
	//方法3-1返回参数1个中文汉字字符串，字符集必须在GB2312(相当于中文简体)范围内，例如“中呀被”(5分)
	public static String randomChineseString(){
		String str = null;
		int highPos,lowPos;
		Random random = new Random();
		;//区码，0xA0打头，从第16区开始，即0xB0=11*16=176,16~55一级汉字，56~87二级汉字
		highPos = (176 + Math.abs(random.nextInt(39)));
		//位码，0xA0打头，范围第1~94列
		random = new Random();
		lowPos = 161 +Math.abs(random.nextInt(94));
		byte[] bArr = new byte[2];
		
		bArr[0] = (new Integer(highPos).byteValue());
		bArr[1] = (new Integer(lowPos).byteValue());
		try {
			//区位码组合成汉字
			str = new String(bArr,"GB2312");
		} catch (UnsupportedEncodingException e) {
			e.printStackTrace();
		}
		return str;
	}
	
	// 方法3-2：返回参数length个中文汉字字符串，字符集必须在GB2312(相当于中文简体)范围内，例如“中呀被”(5分)
		public static String randomChineseString(int length){
			StringBuilder sb = new StringBuilder();
			for (int i = 0; i < length; i++) {
				sb.append(randomChineseString());
			}
			return sb.toString();
		}
		// 方法4：返回中文姓名，必须以真实姓开头，百家姓在“六、附百家姓”里，名使用1-2个随机汉字(8分)，内部调用randomChineseString()方法(3分)。返回示例：“刘呀被”、“欧阳及为”
	public static String generateChineseName(){
		String[] str= {"��","Ǯ","��","��","��","��","֣","��","��","��","��","��","��","��","��","��","��","��","��","��","��","��","ʩ","��","��","��","��","��","��","κ","��","��","��","л","��","��","��","ˮ","�","��","��","��","��","��","��","��","��","��","³","Τ","��","��","��","��","��","��","��","��","Ԭ","��","ۺ","��","ʷ","��","��","��","�","Ѧ","��","��","��","��","��","��","��","��","��","��","��","��","��","��","ʱ","��","Ƥ","��","��","��","��","��","Ԫ","��","��","��","ƽ","��","��","��","��","��","Ҧ","��","տ","��","��","ë","��","��","��","��","��","�","��","��","��","��","̸","��","é","��","��","��","��","��","��","ף","��","��","��","��","��","��","ϯ","��","��","ǿ","��","·","¦","Σ","��","ͯ","��","��","÷","ʢ","��","��","��","��","��","��","��","��","��","��","��","��","��","��","��","��","֧","��","��","��","¬","Ī","��","��","��","��","��","��","Ӧ","��","��","��","��","��","��","��","��","��","��","��","��","ʯ","��","��","ť","��","��","��","��","��","��","½","��","��","��","��","�","��","��","�L","��","��","��","��","��","��","��","��","��","��","��","��","��","��","��","��","��","��","��","��","ɽ","��","��","��","�","��","ȫ","ۭ","��","��","��","��","��","��","��","��","��","��","��","б","��","��","��","��","��","��","��","ղ","��","��","Ҷ","��","˾","��","۬","��","��","��","ӡ","��","��","��","��","ۢ","��","��","��","��","��","��","׿","��","��","��","��","��","��","��","��","��","��","˫","��","ݷ","��","��","̷","��","��","��","��","��","��","��","Ƚ","��","۪","Ӻ","�S","�","ɣ","��","�","ţ","��","ͨ","��","��","��","��","ۣ","��","��","ũ","��","��","ׯ","��","��","��","��","��","Ľ","��","��","ϰ","��","��","��","��","��","��","��","��","��","��","��","��","��","��","��","��","��","��","��","��","��","��","��","��","��","»","��","��","ŷ","�","��","��","ε","Խ","��","¡","ʦ","��","��","��","��","��","��","��","��","��","��","��","��","��","��","��","��","��","ɳ","ؿ","��","��","��","��","��","��","��","��","��","��","��","��","��","��","Ȩ","��","��","��","��","��","��","��","��","��","��","۳","Ϳ","��","��","˧","��","��","��","��","��","��","��","Ĳ","��","٦","��","��","ī","��","��","��","��","��","��","١","��ٹ","˾��","�Ϲ�","ŷ��","�ĺ�","���","����","����","����","�ʸ�","ξ��","����","�̨","��ұ","����","���","����","����","̫��","����","����","����","��ԯ","���","����","����","����","Ľ��","����","����","˾ͽ","˾��","آ��","˾��","��","��","�ӳ�","���","��ľ","����","����","���","����","����","����","�ذ�","�й�","�׸�","����","�θ�","����","����","����","����","��","��","����","΢��","����","����","����","����","�Ϲ�"};
		//获取随机姓氏
		String firstName = str[RandomUtil.random(0, str.length-1)];
		//获取名字
		String lastName = randomChineseString(RandomUtil.random(1, 2));
		return firstName + lastName;
	}
	
	// 方法5 。判断输入的是否是手机号
	public static boolean isPhoneNumber(String src) {
		if(hasText(src)) {
			// 先判断是否有值
			// 定义中国手机号的规则
			String reg = "1[3|5|6|7|8]\\d{9}";
			// 如果能匹配则返回true
			return src.matches(reg);
		}
		return false;
	}
	
	// 方法6 判断是否是邮箱 字母数字下划线开头 @ 字母数字下划线 . 字母数字 number2000@163.com
	public static boolean isEmail(String src) {
		// 先判断是否有值
		if(hasText(src)) {
			// 定义规则
			String reg = "\\w+\\@\\w+\\.com|cn";
			return src.matches(reg);
		}
		return false;
	}
}
